<?php

/**
 * Perform starter kit prototype cleanup.
 */
function sbp_base_install() {
  // Enable starter kit depencency.
  drupal_set_message('Enabling new dependency for starter kit');
  module_enable(array('text_hierarchical'));

  drupal_set_message('Reverting feature modules');
  // Revert specific feature modules.
  features_revert_module('sbp_field_base');
  features_revert_module('sbp_starter_kit');
  features_revert_module('sbp_panels');
  features_revert_module('sbp_resources_incentives');

  drupal_set_message('Disabling unused modules');
  // Disable feature modules.
  module_disable(array('sbp_content'));
  module_disable(array('sbp_guide'));
  module_disable(array('sbp_permits'));

  drupal_set_message('Deleting old field instances');
  // Delete unneeded field instances.
  if ($instance = field_info_instance('node', 'body', 'sbp_starter_kit')) {
    field_delete_instance($instance, TRUE);
  }

  if ($instance = field_info_instance('node', 'field_featured_resources', 'sbp_starter_kit')) {
    field_delete_instance($instance, TRUE);
  }

  if ($instance = field_info_instance('node', 'field_document', 'sbp_starter_kit')) {
    field_delete_instance($instance, TRUE);
  }

  drupal_set_message('Deleting old field bases');
  // Delete unneeded field bases.
  field_delete_field('field_guides');
  field_delete_field('field_starter_kit_key_points');
  field_delete_field('field_related_documents');
  field_delete_field('field_related_permits');

  // Delete unneeded field collections.

  drupal_set_message('Deleting old content types and their nodes');
  // Delete unneeded content types and nodes.
  $types = array(
    'sbp_content',
    'sbp_guide',
    'sbp_permits',
  );
  foreach($types as $type) {
    // First, delete nodes
    $results = db_select('node', 'n')
      ->fields('n', array('nid'))
      ->condition('type', $type)
      ->execute();
    foreach ($results as $result) {
      $nids[] = $result->nid;
    }
    if (!empty($nids)) {
      node_delete_multiple($nids);
      drupal_set_message(t('%count nodes has been deleted.', array('%count' => count($nids))));
    }
    // Then, delete content type
    if (node_type_load($type)) {
      node_type_delete($type);
      variable_del('node_preview_' . $type);
      drupal_set_message(t('%type content type has been deleted.', array('%type' => $type)));
    }
  }
  node_types_rebuild();
}

/**
 * Updating WYSIWYG styles.
 */
function sbp_base_update_7001() {
  module_disable(array('lightning_wysiwyg'));
  module_enable(array('sbp_wysiwyg'));
}