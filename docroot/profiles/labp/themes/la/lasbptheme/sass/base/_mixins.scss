// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// min-width rules
@mixin window_size($width) {
  @if $width == desktop {
    @media all and (min-width : 960px) { @content; }
  }
  @else if $width == tab-wide-up {
    @media all and (min-width : 720px) { @content; }
  }
  @else if $width == tab-narrow-up {
    @media all and (min-width : 480px) { @content; }
  }
}


/* Wrapper width mixin for containers */
@mixin wrapper($wrapper-width: 75%){
  width: $wrapper-width;
  margin: 0 auto;
}

/************************************
            Style Variants
 ************************************/

@mixin hr-thin {
  height: 2px;
  max-width: 40px;
}

@mixin hr-thick {
  height: 4px;
  max-width: 80px;
}

@mixin style-variant($variant-color) {
  background-color: $variant-color;
  color: $white;

  .panel__intro_header { color: $white; }

  hr {
    background-color: $variant-color;
    border: none;
    &.panel__header-line_thin {
      margin: 0.5em 0 2em;
      background: $navy;
    }
    &.panel__header-line {
      margin-bottom: 2em;
      background: $white;
    }
  }
}

.style_variant {
  &.light_blue {
    @include style-variant( $light-blue );
  }
  &.light_green {
    @include style-variant( $light-green );
    color: $navy;
  }
  &.blue {
    @include style-variant( $navy );
    hr.panel__header-line_thin { background: $white; }
  }
  &.white {
    @include style-variant ( $white );
    color: $navy;
    .panel__intro_header { color: $navy; }
    hr.panel__header-line { background:$light-blue ; }
  }
  &.light_grey {
    @include style-variant ( $grayscale_light );
    color: $navy;
  }
}

/******************************
*      Buttons
*******************************/

@mixin panel__button--base($bgcolor, $text-color: $white) {
  @include border-radius(50px);
  background-color:$bgcolor;
  color: $text-color;
  padding: 1em 2em;
  font-weight: bold;
  display: inline-block;
  margin: 1em 0;
  cursor: pointer;
  a { color: $text-color; }

  @include window_size(desktop){
    //@include border-radius(25px);
    font-size: 1.143em;

  }
}


// wizard

@mixin wizard__button--base{
    @include border-radius(20px);
    background-color: $wizard__button--deafult;
    padding: 8px 35px 8px 35px;
    font-weight: bold;
    display: inline-block;
    margin: 0 10px 0 0;
    cursor: pointer;

}

@mixin maintain-ratio($ratio: 1 1) {
  @if length($ratio) < 2 or length($ratio) > 2 {
    @warn "$ratio must be a list with two values.";
  }

  $width: 100%;
  $height: percentage(nth($ratio, 2) / nth($ratio, 1));

  width: $width;
  height: 0;
  padding-bottom: $height;
}

@mixin page__icon_base($url: "../images/icon_view.png"){
  background-image: url($url);
  background-repeat: no-repeat;
  background-size: 32px 32px;
  width:32px;
  height:32px;
  display: inline-block;
  float: right;
  margin: 0 0 0 6px;
}
